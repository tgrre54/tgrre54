def get_url_data_in_keyWord(key_word):
    """
    从关键字获取电影数据
    :param key_word:
    :return:
    """

    chrome_options = Options()
    chrome_options.add_argument('--headless')  # 设置为无头模式，即不显示浏览器
    chrome_options.add_argument('user-agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"')  # 设置user=agent
    chrome_options.add_experimental_option('excludeSwitches', ['enable-automation'])  # 此步骤很重要，设置为开发者模式，防止被各大网站识别出来使用了Selenium
    chrome_options.add_experimental_option("prefs", {"profile.managed_default_content_settings.images": 2})  # 不加载图片,加快访问速度

    load_driver_success = False  # 加载chromedriver驱动是否成功
    browser = None
    wait = None
    try:
        browser = webdriver.Chrome(executable_path='./chromedriver.exe', chrome_options=chrome_options)  # 设置chromedriver驱动路径
        browser.set_page_load_timeout(10)  # 页面加载超时时间为10s
        browser.set_script_timeout(10)  # 页面js加载超时时间为10s

        wait = WebDriverWait(browser, 10)  # 等待超时时长为10s
        load_driver_success = True
    except Exception as ex:
        load_driver_success = False
        err_str = "加载chromedriver驱动失败，请下载chromedriver驱动并填写正确的路径。\n\n异常信息：{}".format(ex)
        return [err_str]
